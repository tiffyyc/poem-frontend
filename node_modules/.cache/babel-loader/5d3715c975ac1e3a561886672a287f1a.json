{"ast":null,"code":"var _jsxFileName = \"/Users/TiffanyCheng/sei/projects/poem-frontend/poem-frontend/src/components/auth/SignOut.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { signOut } from '../../api/auth';\nimport { signOutSuccess } from '../AutoDismissAlert/messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignOut = ({\n  msgAlert,\n  clearUser,\n  user\n}) => {\n  _s();\n\n  const [shouldNavigate, setShouldNavigate] = useState(false); // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n\n  useEffect(() => {\n    // for performance reasons, when using `useEffect`\n    // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n      // make a signOut axios request\n      await signOut(user);\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      }); // reset the user back to its initial value\n\n      clearUser();\n      setShouldNavigate(true);\n    };\n\n    performSignOut();\n  }, []);\n\n  if (!user || shouldNavigate) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  return '';\n};\n\n_s(SignOut, \"hufAWO0Dp97kM0a5RKp4htasbTc=\");\n\n_c = SignOut;\nexport default SignOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignOut\");","map":{"version":3,"sources":["/Users/TiffanyCheng/sei/projects/poem-frontend/poem-frontend/src/components/auth/SignOut.js"],"names":["React","useState","useEffect","Navigate","signOut","signOutSuccess","SignOut","msgAlert","clearUser","user","shouldNavigate","setShouldNavigate","performSignOut","heading","message","variant"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,cAAT,QAA+B,8BAA/B;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuBC,EAAAA;AAAvB,CAAD,KAAmC;AAAA;;AACjD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,KAAD,CAApD,CADiD,CAGjD;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AAChB;AACA;AACE,UAAMU,cAAc,GAAG,YAAY;AACnC;AACE,YAAMR,OAAO,CAACK,IAAD,CAAb;AAEAF,MAAAA,QAAQ,CAAC;AACPM,QAAAA,OAAO,EAAE,yBADF;AAEPC,QAAAA,OAAO,EAAET,cAFF;AAGPU,QAAAA,OAAO,EAAE;AAHF,OAAD,CAAR,CAJiC,CAUjC;;AACAP,MAAAA,SAAS;AACTG,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,KAbD;;AAcAC,IAAAA,cAAc;AACf,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAI,CAACH,IAAD,IAASC,cAAb,EAA6B;AAC3B,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAO,EAAP;AACD,CA9BD;;GAAMJ,O;;KAAAA,O;AAgCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n"]},"metadata":{},"sourceType":"module"}